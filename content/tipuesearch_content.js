var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-41223143/ \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-41223143 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'task', 'text': '', 'tags': '', 'url': 'task.html'}, {'title': 'task5', 'text': '5.請詳細說明如何採手動方式在 Webots 建立下列場景: \n 6希望可以手把手一步步說明該如何利用圖形介面 menu 建立這個場景, 過程中有那些要點必須特別注意? \n 步驟一：創建一個新的 Webots 專案 啟動 Webots：打開 Webots 軟體。 \n 創建新專案： \n 點擊 File (檔案) 菜單，選擇 New Project Directory (新建專案目錄)。 \n 輸入專案名稱並選擇儲存位置。 \n 確保勾選 "Create a new world" (創建新世界) 選項，這樣 Webots 會自動為您創建一個新的 .wbt 世界文件。 \n 步驟二：設置地面 (Ground) 打開場景編輯器：在左側的「場景樹」中，您將看到一個名為 default 的世界。點擊這個世界，然後選擇 Add (添加)。 \n 添加地面： \n 在彈出的窗口中選擇 Solid，這樣可以添加一個固體物體。 \n 在「位置」(Translation) 欄位中，將 Z 軸設置為 -0.1，這樣地面會稍微下降，避免與其他物體重疊。 \n 在 Appearance 欄位中，選擇顏色或貼圖來設置地面的外觀。通常我們可以選擇顏色，例如 Gray (灰色)，這樣看起來像是地面。 \n 步驟三：添加障礙物 添加一個障礙物： \n 點擊 Add (添加) 按鈕，再選擇 Solid 來添加一個固體物體作為障礙物。 \n 將物體的 Translation 欄位設置為 (0, 0, 0.1)，讓它位於地面上方。 \n 您可以改變它的 Size (大小) 欄位，例如設置為 (0.5, 0.5, 0.5)，這樣它會成為一個 0.5 米見方的立方體障礙物。 \n 變更其外觀，在 Appearance 欄位選擇 Color 或 Texture 來設置障礙物的顏色或貼圖。 \n 步驟四：添加機器人 選擇機器人模型： \n 點擊 Add (添加)，在彈出的選擇框中選擇 Robot 類型，您可以選擇 Webots 提供的預設機器人模型，比如 e-puck 或 Simple Robot。 \n 點擊 Add，這樣機器人就會被加入到場景中。 \n 設定機器人的位置： \n 點擊場景樹中的機器人，進入其 Translation (位置) 欄位。 \n 將其位置設置為 (0, 0, 0.3)，這樣它會位於地面之上，且不會與障礙物重疊。 \n 步驟五：設置機器人控制器 設置機器人的控制程式： \n 在機器人物件的 Controller 欄位，選擇一個預設的控制程式，或者點擊 New 來創建一個新的控制程式。 \n 若選擇新建控制程式，Webots 會要求您指定程式語言（C、C++、Python 等），並自動在專案中創建一個新的控制器文件。 \n 您可以選擇使用預設控制器，或編寫您自己的程式來控制機器人的行為，例如使用 Python 控制機器人的簡單前進。 \n 步驟六：保存和運行場景 保存世界文件：確保所有的修改都已經保存，點擊 File (檔案)，選擇 Save World 來保存當前世界文件。 \n 運行場景： \n 點擊上方的綠色播放按鈕，Webots 會啟動模擬，並執行您設置的機器人控制程式。 \n 您可以觀察機器人如何在世界中移動，並與障礙物進行互動。 \n 特別注意的要點： 位置設置：當設置機器人和障礙物的位置時，確保它們不會重疊在一起，這樣避免模型無法正常運行。特別注意 Translation 的 Z 軸值，它控制物體的垂直位置。 \n 控制程式設定：每個機器人都需要指定一個控制程式。您可以使用預設的控制程式來測試機器人的基本行為，但若需要自定義行為，必須撰寫相應的控制程式。 \n 物理屬性：設置物體的物理屬性（如質量、摩擦係數）時，請注意這會影響模擬的結果。例如，障礙物應該設置為具有較高的摩擦係數，而地面則可以選擇較低的摩擦，以模擬正常的行走環境。 \n 機器人模型選擇：Webots 提供多種機器人模型，您可以根據需要選擇適合的機器人。在選擇機器人時，請確保其有正確的控制程式並與您的場景相匹配。 \n \n \n 添加一個障礙物 ： \n \n \n 點擊 \xa0 Add \xa0 (添加) 按鈕，再選擇 \xa0 Solid \xa0 來添加一個固體物體作為障礙物。 \n \n \n 將物體的 \xa0 Translation \xa0 欄位設置為 \xa0 (0, 0, 0.1) ，讓它位於地面上方。 \n \n \n 您可以改變它的 \xa0 Size \xa0 (大小) 欄位，例如設置為 \xa0 (0.5, 0.5, 0.5) ，這樣它會成為一個 0.5 米見方的立方體障礙物。 \n \n \n 變更其外觀，在 \xa0 Appearance \xa0 欄位選擇 \xa0 Color \xa0 或 \xa0 Texture \xa0 來設置障礙物的顏色或貼圖。 \n \n 步驟四：添加機器人 \n \n \n \n \n \n 選擇機器人模型 ： \n \n \n 點擊 \xa0 Add \xa0 (添加)，在彈出的選擇框中選擇 \xa0 Robot \xa0 類型，您可以選擇 Webots 提供的預設機器人模型，比如 \xa0 e-puck \xa0 或 \xa0 Simple Robot 。 \n \n \n 點擊 \xa0 Add ，這樣機器人就會被加入到場景中。 \n \n \n \n \n 設定機器人的位置 ： \n 點擊場景樹中的機器人，進入其 \xa0 Translation \xa0 (位置) 欄位。 \n 將其位置設置為 \xa0 (0, 0, 0.3) ，這樣它會位於地面之上，且不會與障礙物重疊。 \n \n \n \n 步驟五：設置機器人控制器 \n 步驟五：設置機器人控制器 \n \n \n \n 設置機器人的控制程式 ： \n \n \n 在機器人物件的 \xa0 Controller \xa0 欄位，選擇一個預設的控制程式，或者點擊 \xa0 New \xa0 來創建一個新的控制程式。 \n \n \n 若選擇新建控制程式，Webots 會要求您指定程式語言（C、C++、Python 等），並自動在專案中創建一個新的控制器文件。 \n \n \n 您可以選擇使用預設控制器，或編寫您自己的程式來控制機器人的行為，例如使用 Python 控制機器人的簡單前進。 \n 步驟六：保存和運行場景 \n \n \n \n \n \n 保存世界文件 ：確保所有的修改都已經保存，點擊 \xa0 File \xa0 (檔案)，選擇 \xa0 Save World \xa0 來保存當前世界文件。 \n \n \n 運行場景 ： \n 點擊上方的綠色播放按鈕，Webots 會啟動模擬，並執行您設置的機器人控制程式。 \n 您可以觀察機器人如何在世界中移動，並與障礙物進行互動。 \n 特別注意的要點: \n \n \n \n 位置設置 ：當設置機器人和障礙物的位置時，確保它們不會重疊在一起，這樣避免模型無法正常運行。特別注意 \xa0 Translation \xa0 的 Z 軸值，它控制物體的垂直位置。 \n \n \n 控制程式設定 ：每個機器人都需要指定一個控制程式。您可以使用預設的控制程式來測試機器人的基本行為，但若需要自定義行為，必須撰寫相應的控制程式。 \n \n \n 物理屬性 ：設置物體的物理屬性（如質量、摩擦係數）時，請注意這會影響模擬的結果。例如，障礙物應該設置為具有較高的摩擦係數，而地面則可以選擇較低的摩擦，以模擬正常的行走環境。 \n \n \n 機器人模型選擇 ：Webots 提供多種機器人模型，您可以根據需要選擇適合的機器人。在選擇機器人時，請確保其有正確的控制程式並與您的場景相匹配。 \n \n', 'tags': '', 'url': 'task5.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 41223143 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};